package chain

import (
	"github.com/iotaledger/hive.go/core/generics/event"
	"github.com/iotaledger/hive.go/core/identity"

	"github.com/iotaledger/goshimmer/packages/core/commitment"
)

type Events struct {
	EpochCommitmentReceived        *event.Linkable[*EpochCommitmentReceivedEvent, Events, *Events]
	EpochCommitmentRequestReceived *event.Linkable[*EpochCommitmentRequestReceivedEvent, Events, *Events]
	Error                          *event.Linkable[*ErrorEvent, Events, *Events]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (newEvents *Events) {
	return &Events{
		EpochCommitmentReceived:        event.NewLinkable[*EpochCommitmentReceivedEvent, Events, *Events](),
		EpochCommitmentRequestReceived: event.NewLinkable[*EpochCommitmentRequestReceivedEvent, Events, *Events](),
		Error:                          event.NewLinkable[*ErrorEvent, Events, *Events](),
	}
})

type EpochCommitmentReceivedEvent struct {
	Commitment *commitment.Commitment
	Neighbor   identity.ID
}

type EpochCommitmentRequestReceivedEvent struct {
	CommitmentID commitment.ID
	Source       identity.ID
}

type ErrorEvent struct {
	Error  error
	Source identity.ID
}

package acceptance

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/protocol/ledger/utxo"
)

type Events struct {
	BlockAccepted *event.Linkable[*Block, Events, *Events]
	Reorg         *event.Linkable[utxo.TransactionID, Events, *Events]
	Error         *event.Linkable[error, Events, *Events]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.NewLinkableEvents(func(self *Events) (linker func(*Events)) {
	self.BlockAccepted = event.NewLinkable[*Block, Events]()
	self.Reorg = event.NewLinkable[utxo.TransactionID, Events]()
	self.Error = event.NewLinkable[error, Events]()

	return func(newTarget *Events) {
		self.BlockAccepted.LinkTo(newTarget.BlockAccepted)
		self.Reorg.LinkTo(newTarget.Reorg)
		self.Error.LinkTo(newTarget.Error)
	}
})

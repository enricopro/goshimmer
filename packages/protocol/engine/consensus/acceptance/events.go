package acceptance

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/protocol/ledger/utxo"
)

type Events struct {
	BlockAccepted *event.Linkable[*Block, Events, *Events]
	Reorg         *event.Linkable[utxo.TransactionID, Events, *Events]
	Error         *event.Linkable[error, Events, *Events]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (newEvents *Events) {
	return &Events{
		BlockAccepted: event.NewLinkable[*Block, Events, *Events](),
		Reorg:         event.NewLinkable[utxo.TransactionID, Events, *Events](),
		Error:         event.NewLinkable[error, Events, *Events](),
	}
})

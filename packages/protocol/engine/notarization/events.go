package notarization

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/core/commitment"
	"github.com/iotaledger/goshimmer/packages/core/epoch"
)

// region Events ///////////////////////////////////////////////////////////////////////////////////////////////////////
// Events is a container that acts as a dictionary for the existing events of a notarization manager.
type Events struct {
	// EpochCommitted is an event that gets triggered whenever an epoch commitment is committable.
	EpochCommitted          *event.Linkable[*EpochCommittedEvent]
	ConsensusWeightsUpdated *event.Linkable[*ConsensusWeightsUpdatedEvent]

	Error *event.Linkable[error]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (self *Events) {
	return &Events{
		EpochCommitted:          event.NewLinkable[*EpochCommittedEvent](),
		ConsensusWeightsUpdated: event.NewLinkable[*ConsensusWeightsUpdatedEvent](),
		Error:                   event.NewLinkable[error](),
	}
})

// EpochCommittedEvent is a container that acts as a dictionary for the EpochCommittable event related parameters.
type EpochCommittedEvent struct {
	// EI is the index of committable epoch.
	EI epoch.Index
	// Commitment is the ec root of committable epoch.
	Commitment *commitment.Commitment
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

package tangle

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/protocol/engine/tangle/blockdag"
	"github.com/iotaledger/goshimmer/packages/protocol/engine/tangle/booker"
	"github.com/iotaledger/goshimmer/packages/protocol/engine/tangle/virtualvoting"
)

type Events struct {
	BlockDAG      *blockdag.Events
	Booker        *booker.Events
	VirtualVoting *virtualvoting.Events

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableCollectionConstructor[Events](func(e *Events) {
	e.BlockDAG = blockdag.NewEvents()
	e.Booker = booker.NewEvents()
	e.VirtualVoting = virtualvoting.NewEvents()

	e.OnLinkUpdated(func(linkTarget *Events) {
		e.BlockDAG.LinkTo(linkTarget.BlockDAG)
		e.Booker.LinkTo(linkTarget.Booker)
		e.VirtualVoting.LinkTo(linkTarget.VirtualVoting)
	})
})

package virtualvoting

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/core/votes/conflicttracker"
	"github.com/iotaledger/goshimmer/packages/core/votes/sequencetracker"
	"github.com/iotaledger/goshimmer/packages/protocol/ledger/utxo"
)

type Events struct {
	BlockTracked *event.Linkable[*Block, Events, *Events]

	ConflictTracker *conflicttracker.Events[utxo.TransactionID]
	SequenceTracker *sequencetracker.Events

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableCollectionConstructor[Events](func(e *Events) {
	e.BlockTracked = event.NewLinkable[*Block, Events]()
	e.ConflictTracker = conflicttracker.NewEvents[utxo.TransactionID]()
	e.SequenceTracker = sequencetracker.NewEvents()

	e.OnLinkUpdated(func(target *Events) {
		e.BlockTracked.LinkTo(target.BlockTracked)
		e.ConflictTracker.LinkTo(target.ConflictTracker)
		e.SequenceTracker.LinkTo(target.SequenceTracker)
	})
})

func (e *Events) WithConflictTrackerEvents(events *conflicttracker.Events[utxo.TransactionID]) (self *Events) {
	e.ConflictTracker = events

	return e
}

package protocol

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/protocol/engine"
)

type Events struct {
	SwitchedEngine *event.Linkable[*engine.Engine, Events, *Events]

	Engine *engine.Events

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.NewLinkableEvents(func(self *Events) (linker func(*Events)) {
	self.SwitchedEngine = event.NewLinkable[*engine.Engine, Events]()

	self.Engine = engine.NewEvents()

	return func(newTarget *Events) {
		self.SwitchedEngine.LinkTo(newTarget.SwitchedEngine)

		self.Engine.LinkTo(newTarget.Engine)
	}
})

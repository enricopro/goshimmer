package sequencetracker

import (
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/core/validator"
	"github.com/iotaledger/goshimmer/packages/protocol/engine/tangle/booker/markers"
)

type Events struct {
	VotersUpdated *event.Linkable[*VoterUpdatedEvent, Events, *Events]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableCollectionConstructor[Events](func(e *Events) {
	e.VotersUpdated = event.Link(event.NewLinkable[*VoterUpdatedEvent, Events](), e, func(target *Events) { e.VotersUpdated.LinkTo(target.VotersUpdated) })
})

type VoterUpdatedEvent struct {
	Voter                 *validator.Validator
	NewMaxSupportedIndex  markers.Index
	PrevMaxSupportedIndex markers.Index
	SequenceID            markers.SequenceID
}
